// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages.proto

#include "messages.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

PROTOBUF_CONSTEXPR MsgInvokerCast_EntityMsg::MsgInvokerCast_EntityMsg(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.target_entity_)*/0} {}
struct MsgInvokerCast_EntityMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgInvokerCast_EntityMsgDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgInvokerCast_EntityMsgDefaultTypeInternal() {}
  union {
    MsgInvokerCast_EntityMsg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgInvokerCast_EntityMsgDefaultTypeInternal _MsgInvokerCast_EntityMsg_default_instance_;
PROTOBUF_CONSTEXPR MsgInvokerCast::MsgInvokerCast(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.entity_msg_)*/nullptr
  , /*decltype(_impl_.cast_activity_)*/0} {}
struct MsgInvokerCastDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgInvokerCastDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgInvokerCastDefaultTypeInternal() {}
  union {
    MsgInvokerCast _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgInvokerCastDefaultTypeInternal _MsgInvokerCast_default_instance_;
static ::_pb::Metadata file_level_metadata_messages_2eproto[2];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_messages_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_messages_2eproto = nullptr;

const uint32_t TableStruct_messages_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::MsgInvokerCast_EntityMsg, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::MsgInvokerCast_EntityMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::MsgInvokerCast_EntityMsg, _impl_.target_entity_),
  0,
  PROTOBUF_FIELD_OFFSET(::MsgInvokerCast, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::MsgInvokerCast, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::MsgInvokerCast, _impl_.entity_msg_),
  PROTOBUF_FIELD_OFFSET(::MsgInvokerCast, _impl_.cast_activity_),
  0,
  1,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, -1, sizeof(::MsgInvokerCast_EntityMsg)},
  { 8, 16, -1, sizeof(::MsgInvokerCast)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::_MsgInvokerCast_EntityMsg_default_instance_._instance,
  &::_MsgInvokerCast_default_instance_._instance,
};

const char descriptor_table_protodef_messages_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016messages.proto\"z\n\016MsgInvokerCast\022-\n\nen"
  "tity_msg\030\001 \002(\0132\031.MsgInvokerCast.EntityMs"
  "g\022\025\n\rcast_activity\030\002 \002(\005\032\"\n\tEntityMsg\022\025\n"
  "\rtarget_entity\030\001 \002(\005"
  ;
static ::_pbi::once_flag descriptor_table_messages_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_messages_2eproto = {
    false, false, 140, descriptor_table_protodef_messages_2eproto,
    "messages.proto",
    &descriptor_table_messages_2eproto_once, nullptr, 0, 2,
    schemas, file_default_instances, TableStruct_messages_2eproto::offsets,
    file_level_metadata_messages_2eproto, file_level_enum_descriptors_messages_2eproto,
    file_level_service_descriptors_messages_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_messages_2eproto_getter() {
  return &descriptor_table_messages_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_messages_2eproto(&descriptor_table_messages_2eproto);

// ===================================================================

class MsgInvokerCast_EntityMsg::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgInvokerCast_EntityMsg>()._impl_._has_bits_);
  static void set_has_target_entity(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

MsgInvokerCast_EntityMsg::MsgInvokerCast_EntityMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:MsgInvokerCast.EntityMsg)
}
MsgInvokerCast_EntityMsg::MsgInvokerCast_EntityMsg(const MsgInvokerCast_EntityMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgInvokerCast_EntityMsg* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.target_entity_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.target_entity_ = from._impl_.target_entity_;
  // @@protoc_insertion_point(copy_constructor:MsgInvokerCast.EntityMsg)
}

inline void MsgInvokerCast_EntityMsg::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.target_entity_){0}
  };
}

MsgInvokerCast_EntityMsg::~MsgInvokerCast_EntityMsg() {
  // @@protoc_insertion_point(destructor:MsgInvokerCast.EntityMsg)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgInvokerCast_EntityMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void MsgInvokerCast_EntityMsg::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgInvokerCast_EntityMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:MsgInvokerCast.EntityMsg)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.target_entity_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgInvokerCast_EntityMsg::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int32 target_entity = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_target_entity(&has_bits);
          _impl_.target_entity_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MsgInvokerCast_EntityMsg::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgInvokerCast.EntityMsg)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int32 target_entity = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_target_entity(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgInvokerCast.EntityMsg)
  return target;
}

size_t MsgInvokerCast_EntityMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MsgInvokerCast.EntityMsg)
  size_t total_size = 0;

  // required int32 target_entity = 1;
  if (_internal_has_target_entity()) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_target_entity());
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgInvokerCast_EntityMsg::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgInvokerCast_EntityMsg::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgInvokerCast_EntityMsg::GetClassData() const { return &_class_data_; }


void MsgInvokerCast_EntityMsg::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgInvokerCast_EntityMsg*>(&to_msg);
  auto& from = static_cast<const MsgInvokerCast_EntityMsg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MsgInvokerCast.EntityMsg)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_target_entity()) {
    _this->_internal_set_target_entity(from._internal_target_entity());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgInvokerCast_EntityMsg::CopyFrom(const MsgInvokerCast_EntityMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MsgInvokerCast.EntityMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgInvokerCast_EntityMsg::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void MsgInvokerCast_EntityMsg::InternalSwap(MsgInvokerCast_EntityMsg* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.target_entity_, other->_impl_.target_entity_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgInvokerCast_EntityMsg::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messages_2eproto_getter, &descriptor_table_messages_2eproto_once,
      file_level_metadata_messages_2eproto[0]);
}

// ===================================================================

class MsgInvokerCast::_Internal {
 public:
  using HasBits = decltype(std::declval<MsgInvokerCast>()._impl_._has_bits_);
  static const ::MsgInvokerCast_EntityMsg& entity_msg(const MsgInvokerCast* msg);
  static void set_has_entity_msg(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_cast_activity(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

const ::MsgInvokerCast_EntityMsg&
MsgInvokerCast::_Internal::entity_msg(const MsgInvokerCast* msg) {
  return *msg->_impl_.entity_msg_;
}
MsgInvokerCast::MsgInvokerCast(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:MsgInvokerCast)
}
MsgInvokerCast::MsgInvokerCast(const MsgInvokerCast& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MsgInvokerCast* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.entity_msg_){nullptr}
    , decltype(_impl_.cast_activity_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_entity_msg()) {
    _this->_impl_.entity_msg_ = new ::MsgInvokerCast_EntityMsg(*from._impl_.entity_msg_);
  }
  _this->_impl_.cast_activity_ = from._impl_.cast_activity_;
  // @@protoc_insertion_point(copy_constructor:MsgInvokerCast)
}

inline void MsgInvokerCast::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.entity_msg_){nullptr}
    , decltype(_impl_.cast_activity_){0}
  };
}

MsgInvokerCast::~MsgInvokerCast() {
  // @@protoc_insertion_point(destructor:MsgInvokerCast)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MsgInvokerCast::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.entity_msg_;
}

void MsgInvokerCast::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MsgInvokerCast::Clear() {
// @@protoc_insertion_point(message_clear_start:MsgInvokerCast)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(_impl_.entity_msg_ != nullptr);
    _impl_.entity_msg_->Clear();
  }
  _impl_.cast_activity_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgInvokerCast::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .MsgInvokerCast.EntityMsg entity_msg = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_entity_msg(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required int32 cast_activity = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_cast_activity(&has_bits);
          _impl_.cast_activity_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MsgInvokerCast::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MsgInvokerCast)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .MsgInvokerCast.EntityMsg entity_msg = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::entity_msg(this),
        _Internal::entity_msg(this).GetCachedSize(), target, stream);
  }

  // required int32 cast_activity = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_cast_activity(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MsgInvokerCast)
  return target;
}

size_t MsgInvokerCast::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MsgInvokerCast)
  size_t total_size = 0;

  if (_internal_has_entity_msg()) {
    // required .MsgInvokerCast.EntityMsg entity_msg = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.entity_msg_);
  }

  if (_internal_has_cast_activity()) {
    // required int32 cast_activity = 2;
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_cast_activity());
  }

  return total_size;
}
size_t MsgInvokerCast::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MsgInvokerCast)
  size_t total_size = 0;

  if (((_impl_._has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .MsgInvokerCast.EntityMsg entity_msg = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.entity_msg_);

    // required int32 cast_activity = 2;
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_cast_activity());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgInvokerCast::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MsgInvokerCast::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgInvokerCast::GetClassData() const { return &_class_data_; }


void MsgInvokerCast::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MsgInvokerCast*>(&to_msg);
  auto& from = static_cast<const MsgInvokerCast&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MsgInvokerCast)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_entity_msg()->::MsgInvokerCast_EntityMsg::MergeFrom(
          from._internal_entity_msg());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.cast_activity_ = from._impl_.cast_activity_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgInvokerCast::CopyFrom(const MsgInvokerCast& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MsgInvokerCast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgInvokerCast::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  if (_internal_has_entity_msg()) {
    if (!_impl_.entity_msg_->IsInitialized()) return false;
  }
  return true;
}

void MsgInvokerCast::InternalSwap(MsgInvokerCast* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MsgInvokerCast, _impl_.cast_activity_)
      + sizeof(MsgInvokerCast::_impl_.cast_activity_)
      - PROTOBUF_FIELD_OFFSET(MsgInvokerCast, _impl_.entity_msg_)>(
          reinterpret_cast<char*>(&_impl_.entity_msg_),
          reinterpret_cast<char*>(&other->_impl_.entity_msg_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgInvokerCast::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messages_2eproto_getter, &descriptor_table_messages_2eproto_once,
      file_level_metadata_messages_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::MsgInvokerCast_EntityMsg*
Arena::CreateMaybeMessage< ::MsgInvokerCast_EntityMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MsgInvokerCast_EntityMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::MsgInvokerCast*
Arena::CreateMaybeMessage< ::MsgInvokerCast >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MsgInvokerCast >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
